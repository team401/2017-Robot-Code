package org.team401.robot;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileNotFoundException;
import java.io.IOException;

import edu.wpi.first.wpilibj.DriverStation;

/**
 * Static class that reads motion profiles from .csv files.
 * Data expected is 3 columns:
 * Position(rotations), Velocity(RPM), Duration(ms)
 */

public class MotionProfiles {
	//alliance param defaults to false
	public static double[][][] get(String start, String tgt, boolean mecanum){
		return get(start, tgt, mecanum, false);
	}

	/**
	 * Scans multiple .csv files to get the correct motion profiles for any given start and end point.
	 *
	 * @param start Where the robot starts at the beginning of the match.  Valid inputs are "L", "C", and "R".
	 * @param tgt Where the robot will drive.  Valid inputs are "LH", "LL", "CL", "RL", and "RH".
	 * @param mecanum Whether to read spreadsheets for each gearbox or for left and right sets of gearboxes.
	 * @param alliance Whether or not the alliance we're on matters.
	 * @return Array with length 4 or 2 containing complete motion profiles.
	 */
	public static double[][][] get(String start, String tgt, boolean mecanum, boolean alliance) {
		//Adds an alliance identifier("R", "B", or "I") if the path is alliance-dependent. "I" should never occur.
		String all = alliance||tgt.endsWith("H") ? DriverStation.getInstance().getAlliance().name().substring(0, 1) : "";

		//Constructs the .csv names from parameters
		return mecanum ?
			new double[][][]{
				//Mecanum drive
				scanCSV("/home/mecanumprofiles/"+start+tgt+all+" FL"),
				scanCSV("/home/mecanumprofiles/"+start+tgt+all+" FR"),
				scanCSV("/home/mecanumprofiles/"+start+tgt+all+" RL"),
				scanCSV("/home/mecanumprofiles/"+start+tgt+all+" RR")
			}: new double[][][]{
				//Tank drive
				scanCSV("/home/tankprofiles/"+start+tgt+all+" L"),
				scanCSV("/home/tankprofiles/"+start+tgt+all+" R")
			};
	}
	public static double[][][] get(boolean mecanum){
		return mecanum ? new double[][][]{k,k,k,k}:new double[][][]{k,k};
	}

	/**
	 * Parses the contents of a .csv as a 2D array of doubles.
	 * @param fileName Name, without file extension, of the file to read from.
	 * @return Contents of the .csv
	 */
	private static double[][] scanCSV(String fileName){
		//Add file extension
		fileName = fileName + ".csv";

		//BufferedReader will read from the file
		BufferedReader br;

		//Gigantic String array to store as much data as needed
		String[][] strs = new String[99999][3];

		//Place to store the finished product
		double[][] result;

		//File I/O sometimes causes errors
		try {
			//Scan the file into Java
			br = new BufferedReader(new FileReader(fileName));

			//Read each line, and split it into 3 double strings
			int i = 0;
			for(String line; (line=br.readLine())!=null; i++)
				strs[i] = line.split(",");

			//Size the result to the length of the file
			result = new double[i][3];

			//Parse the string array into doubles
			for(int j = 0; j < i; j++)
				for(int k = 0; k < 3; k++)
					result[j][k] = Double.parseDouble(strs[j][k]);

			//Close the file reader and return the result
			br.close();
			return result;

		//Notify user of exceptions
		} catch (FileNotFoundException e) {
			System.out.println("File " + fileName + " not found!");
		} catch (IOException e) {
			System.out.println("IOException in scanCSV while scanning " + fileName + "!");
		}

		//Return empty array if there was an exception
		return new double[0][0];
	}
	private static double [][]k = new double[][]{
			{0,	0,	20},
			{0.0000361538461538462,	0.216923076923077,	20},
			{0.000162692307692308,	0.542307692307692,	20},
			{0.000415769230769231,	0.976153846153846,	20},
			{0.000831538461538462,	1.51846153846154,	20},
			{0.00144615384615385,	2.16923076923077,	20},
			{0.00229576923076923,	2.92846153846154,	20},
			{0.00341653846153846,	3.79615384615385,	20},
			{0.00484461538461539,	4.77230769230769,	20},
			{0.00661615384615385,	5.85692307692308,	20},
			{0.00876730769230769,	7.05,	20},
			{0.0113342307692308,	8.35153846153846,	20},
			{0.0143530769230769,	9.76153846153846,	20},
			{0.01786,	11.28,	20},
			{0.0218911538461538,	12.9069230769231,	20},
			{0.0264826923076923,	14.6423076923077,	20},
			{0.0316707692307692,	16.4861538461538,	20},
			{0.0374915384615385,	18.4384615384615,	20},
			{0.0439811538461538,	20.4992307692308,	20},
			{0.0511757692307692,	22.6684615384615,	20},
			{0.0591115384615385,	24.9461538461538,	20},
			{0.0678246153846154,	27.3323076923077,	20},
			{0.0773511538461538,	29.8269230769231,	20},
			{0.0877273076923077,	32.43,	20},
			{0.0989892307692308,	35.1415384615385,	20},
			{0.111173076923077,	37.9615384615385,	20},
			{0.124296923076923,	40.7815384615385,	20},
			{0.138360769230769,	43.6015384615385,	20},
			{0.153364615384615,	46.4215384615385,	20},
			{0.169308461538462,	49.2415384615385,	20},
			{0.186192307692308,	52.0615384615385,	20},
			{0.20398,	54.6646153846154,	20},
			{0.222617307692308,	57.1592307692308,	20},
			{0.242068076923077,	59.5453846153846,	20},
			{0.262296153846154,	61.8230769230769,	20},
			{0.283265384615385,	63.9923076923077,	20},
			{0.304939615384615,	66.0530769230769,	20},
			{0.327282692307692,	68.0053846153846,	20},
			{0.350258461538462,	69.8492307692308,	20},
			{0.373830769230769,	71.5846153846154,	20},
			{0.397963461538462,	73.2115384615385,	20},
			{0.422620384615385,	74.73,	20},
			{0.447765384615385,	76.14,	20},
			{0.473362307692308,	77.4415384615384,	20},
			{0.499375,	78.6346153846154,	20},
			{0.525767307692308,	79.7192307692308,	20},
			{0.552503076923077,	80.6953846153846,	20},
			{0.579546153846154,	81.5630769230769,	20},
			{0.606860384615385,	82.3223076923077,	20},
			{0.634409615384616,	82.9730769230769,	20},
			{0.662157692307692,	83.5153846153846,	20},
			{0.690068461538462,	83.9492307692308,	20},
			{0.718105769230769,	84.2746153846154,	20},
			{0.746233461538462,	84.4915384615385,	20},
			{0.774415384615385,	84.6,	20},
			{0.802615384615385,	84.6,	20},
			{0.830815384615385,	84.6,	20},
			{0.859015384615385,	84.6,	20},
			{0.887215384615385,	84.6,	20},
			{0.915415384615385,	84.6,	20},
			{0.943615384615385,	84.6,	20},
			{0.971815384615385,	84.6,	20},
			{1.00001538461538,	84.6,	20},
			{1.02821538461538,	84.6,	20},
			{1.05641538461538,	84.6,	20},
			{1.08461538461538,	84.6,	20},
			{1.11281538461538,	84.6,	20},
			{1.14101538461538,	84.6,	20},
			{1.16921538461538,	84.6,	20},
			{1.19741538461538,	84.6,	20},
			{1.22561538461538,	84.6,	20},
			{1.25381538461538,	84.6,	20},
			{1.28201538461538,	84.6,	20},
			{1.31021538461538,	84.6,	20},
			{1.33841538461538,	84.6,	20},
			{1.36661538461538,	84.6,	20},
			{1.39481538461538,	84.6,	20},
			{1.42301538461538,	84.6,	20},
			{1.45121538461538,	84.6,	20},
			{1.47941538461538,	84.6,	20},
			{1.50761538461538,	84.6,	20},
			{1.53581538461538,	84.6,	20},
			{1.56401538461538,	84.6,	20},
			{1.59221538461538,	84.6,	20},
			{1.62041538461538,	84.6,	20},
			{1.64861538461538,	84.6,	20},
			{1.67681538461538,	84.6,	20},
			{1.70501538461538,	84.6,	20},
			{1.73321538461538,	84.6,	20},
			{1.76141538461538,	84.6,	20},
			{1.78961538461538,	84.6,	20},
			{1.81781538461538,	84.6,	20},
			{1.84601538461538,	84.6,	20},
			{1.87421538461538,	84.6,	20},
			{1.90241538461538,	84.6,	20},
			{1.93061538461538,	84.6,	20},
			{1.95881538461538,	84.6,	20},
			{1.98701538461538,	84.6,	20},
			{2.01521538461539,	84.6,	20},
			{2.04341538461539,	84.6,	20},
			{2.07161538461539,	84.6,	20},
			{2.09981538461539,	84.6,	20},
			{2.12801538461539,	84.6,	20},
			{2.15621538461539,	84.6,	20},
			{2.18441538461539,	84.6,	20},
			{2.21261538461539,	84.6,	20},
			{2.24081538461539,	84.6,	20},
			{2.26901538461539,	84.6,	20},
			{2.29717923076923,	84.3830769230769,	20},
			{2.32525269230769,	84.0576923076923,	20},
			{2.35319961538462,	83.6238461538462,	20},
			{2.38098384615385,	83.0815384615384,	20},
			{2.40856923076923,	82.4307692307692,	20},
			{2.43591961538462,	81.6715384615385,	20},
			{2.46299884615385,	80.8038461538461,	20},
			{2.48977076923077,	79.8276923076923,	20},
			{2.51619923076923,	78.7430769230769,	20},
			{2.54224807692308,	77.55,	20},
			{2.56788115384615,	76.2484615384615,	20},
			{2.59306230769231,	74.8384615384615,	20},
			{2.61775538461538,	73.32,	20},
			{2.64192423076923,	71.6930769230769,	20},
			{2.66553269230769,	69.9576923076923,	20},
			{2.68854461538462,	68.1138461538462,	20},
			{2.71092384615385,	66.1615384615385,	20},
			{2.73263423076923,	64.1007692307692,	20},
			{2.75363961538462,	61.9315384615385,	20},
			{2.77390384615385,	59.6538461538461,	20},
			{2.79339076923077,	57.2676923076923,	20},
			{2.81206423076923,	54.7730769230769,	20},
			{2.82988807692308,	52.17,	20},
			{2.84682615384615,	49.4584615384615,	20},
			{2.86284230769231,	46.6384615384615,	20},
			{2.87791846153846,	43.8184615384616,	20},
			{2.89205461538462,	40.9984615384615,	20},
			{2.90525076923077,	38.1784615384616,	20},
			{2.91750692307692,	35.3584615384616,	20},
			{2.92882307692308,	32.5384615384615,	20},
			{2.93923538461538,	29.9353846153846,	20},
			{2.94879807692308,	27.4407692307692,	20},
			{2.95754730769231,	25.0546153846154,	20},
			{2.96551923076923,	22.7769230769231,	20},
			{2.97275,	20.6076923076923,	20},
			{2.97927576923077,	18.5469230769231,	20},
			{2.98513269230769,	16.5946153846154,	20},
			{2.99035692307692,	14.7507692307692,	20},
			{2.99498461538462,	13.0153846153846,	20},
			{2.99905192307692,	11.3884615384615,	20},
			{3.002595,	9.87000000000001,	20},
			{3.00565,	8.46000000000001,	20},
			{3.00825307692308,	7.15846153846155,	20},
			{3.01044038461538,	5.96538461538462,	20},
			{3.01224807692308,	4.88076923076924,	20},
			{3.01371230769231,	3.90461538461539,	20},
			{3.01486923076923,	3.03692307692308,	20},
			{3.015755,	2.27769230769231,	20},
			{3.01640576923077,	1.62692307692308,	20},
			{3.01685769230769,	1.08461538461539,	20},
			{3.01714692307692,	0.650769230769233,	20},
			{3.01730961538462,	0.325384615384617,	20},
			{3.01738192307692,	0.10846153846154,	20},
			{3.0174,	6.77342797235252E-16,	20},
			{3.0174,	0,	20}};
}